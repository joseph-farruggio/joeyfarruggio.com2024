---
import TableOfContentsHeading from "./TableOfContentsHeading.astro";
const { headings } = Astro.props;
const toc = buildToc(headings);

function buildToc(headings) {
	const toc = [];
	const parentHeadings = new Map();

	if (headings.length === 0) {
		return toc;
	}

	headings.forEach((h) => {
		const heading = { ...h, subheadings: [] };
		parentHeadings.set(heading.depth, heading);
		// Change 2 to 1 if your markdown includes your <h1>
		if (heading.depth === 2) {
			toc.push(heading);
		} else {
			parentHeadings.get(heading.depth - 1).subheadings.push(heading);
		}
	});
	return toc;
}
---

{
	toc.length && (
		<>
			<p class="text-white text-lg">In this article</p>
			<nav
				class="hidden relative lg:block"
				x-data={`toc('${toc[0].slug}')`}
				@highlight.window="highlight($event.detail)">
				<ul role="list" class="border-l border-transparent px-0 m-0">
					{toc.map((heading) => (
						<TableOfContentsHeading heading={heading} />
					))}
				</ul>
				<div
					x-ref="highlight"
					class="absolute bg-white/10 w-full top-0 left-0 right-0 -mx-2 rounded-md transition delay-150"
				/>
			</nav>
		</>
	)
}
